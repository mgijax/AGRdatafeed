#!/bin/bash

function usage {
  echo "
Usage: $0 -R schema_release -C dump_count [-D output_directory][-g][-a][-e][-p][-d][-f]
Generates files for upload to the Alliance. Typical invocation:
	$0 -R 1.0.0.7 -C 3 -D .
This will do the same thing but only dump the phenotype and allele info files:
	$0 -R 1.0.0.7 -C 3 -D . -p -a
Options:
-h	Print this message and exit.
-R	Specifies the alliance schema release number, eg, 1.0.0.7. Required.
-C	Specifies the update count for this schema version (1, 2, 3, ...). Required.
-D	Specifies the parent directory where the output directory will be created.
	Default = current working directory.

Specify any combination of the following options to run just those pieces.
If none are specified, ALL are run.
-g	Dump the basic gene info file.
-a	Dump the allele info file.
-e	Dump the wildtype expression data file.
-p	Dump the phenotype annotations file.
-d	Dump the disease annotations file.
-f	Dump the GFF3 gene models file.
"
}

OUTPUT_DIR="."
SCHEMA_RELEASE=""
RELEASE_COUNT=""
DO_ALL="true"
DO_BGI=""
DO_ALLELES=""
DO_EXPRESSION=""
DO_DISEASE=""
DO_PHENO=""
DO_GFF=""

until [ -z "$1" ] 
do
    case "$1" in
    -h)
        usage
	exit 0
	;;
    -D) 
	shift
        OUTPUT_DIR="$1"
        ;;  
    -R) 
	shift
        SCHEMA_RELEASE="$1"
        ;;  
    -C) 
	shift
        RELEASE_COUNT="$1"
        ;;  
    -g) 
        DO_BGI="true"
	DO_ALL=""
        ;;  
    -a) 
        DO_ALLELES="true"
	DO_ALL=""
        ;;  
    -e) 
        DO_EXPRESSION="true"
	DO_ALL=""
        ;; 
    -d) 
        DO_DISEASE="true"
	DO_ALL=""
        ;; 
    -p) 
        DO_PHENO="true"
	DO_ALL=""
        ;; 
    -f) 
        DO_GFF="true"
	DO_ALL=""
        ;; 
    *)  
        echo "Unrecognized option:" $1
	usage
        exit -1
    esac
    shift
done

# ---------------------------------------
# Check parameters
if [[ ! ${SCHEMA_RELEASE} ]] ; then
  echo "Please specify a schema version."
  exit -1
fi

if [[ ! ${RELEASE_COUNT} ]] ; then
  echo "Please specify a release count."
  exit -1
fi

# ---------------------------------------
#
ODIR="${OUTPUT_DIR}/MGI_${SCHEMA_RELEASE}_${RELEASE_COUNT}"
ROOT="${ODIR}/MGI_${SCHEMA_RELEASE}"

# ---------------------------------------
#
mkdir -p ${ODIR}

# ---------------------------------------
# BGI
if [[ ${DO_ALL} || ${DO_BGI} ]] ; then
  echo "Generating basic gene info file..."
  python basicGeneInfo.py > ${ROOT}_BGI.json
fi

# ---------------------------------------
# Expression
if [[ ${DO_ALL} || ${DO_EXPRESSION} ]] ; then
  echo "Generating wildtype expression data file..."
  python expression.py > ${ROOT}_expression.json
fi

# ---------------------------------------
# Alleles
if [[ ${DO_ALL} || ${DO_ALLELES} ]] ; then
  echo "Generating allele info file..."
  python alleleInfo.py > ${ROOT}_allele.json
fi

# ---------------------------------------
# Phenotypes
if [[ ${DO_ALL} || ${DO_PHENO} ]] ; then
  echo "Generating phenotype annotations file..."
  python diseasePheno.py -p > ${ROOT}_phenotype.json
fi

# ---------------------------------------
# Disease
if [[ ${DO_ALL} || ${DO_DISEASE} ]] ; then
  echo "Generating disease annotations file..."
  python diseasePheno.py -d > ${ROOT}_disease.json
fi

# ---------------------------------------
# GFF3
if [[ ${DO_ALL} || ${DO_GFF} ]] ; then
  echo "Downloading MGI.agr.gff3..."
  curl "http://www.informatics.jax.org/downloads/mgigff3/MGI.agr.gff3.gz" | gunzip > ${ROOT}_GFF.gff3
fi

